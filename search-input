<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Table Display with Search</title>
</head>
<body>

  <header>
    <img src="amex-logo.png" alt="Amex Logo">
    <h2>Links by Category</h2>
  </header>

  <div class="search-container">
    <input type="text" id="searchInput" placeholder="Search...">
  </div>

  <div id="sections"></div>

  <style>
    body {
      font-family: Arial, sans-serif;
    }
    header {
      background-color: #0074A7;
      color: white;
      padding: 10px;
      text-align: center;
    }
    header img {
      height: 40px;
      vertical-align: middle;
    }
    .search-container {
      text-align: center;
      margin: 20px 0;
    }

    #searchInput {
      padding: 10px;
      width: 300px;
      border: 1px solid #ccc;
      border-radius: 5px;
      font-size: 16px;
      transition: border-color 0.3s ease-in-out;
    }

    #searchInput:focus {
      outline: none;
      border-color: #0074A7;
    }

    .section {
      margin: 20px;
      border: 1px solid #ccc;
      padding: 10px;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 10px;
    }
    th, td {
      border: 1px solid #ccc;
      padding: 8px;
      text-align: left;
    }
    th {
      background-color: #f2f2f2;
    }
  </style>

  <script>
    const dataArray = [
      { key: 'asd', value: 'https://google.com/ggh', section: 'repolink' },
      { key: 'xyz', value: 'https://google.com/ggh', section: 'documentlink' },
      { key: 'bsd', value: 'https://google.com/ggh', section: 'repolink' },
      { key: 'cmd', value: 'https://google.com/ggh', section: 'documentlink' },
      { key: 'pkr', value: 'https://google.com/ggh', section: 'repolink' },
      { key: 'gfc', value: 'https://google.com/ggh', section: 'documentlink' },
      // Add more objects to your dataArray as needed
    ];

    const sectionsContainer = document.getElementById('sections');
    const searchInput = document.getElementById('searchInput');

    // Function to generate table rows for a specific section
    function generateTableRowsForSection(data, section) {
      const sectionContainer = document.createElement('div');
      sectionContainer.classList.add('section');

      const sectionTitle = document.createElement('h3');
      sectionTitle.textContent = section;
      sectionContainer.appendChild(sectionTitle);

      const table = document.createElement('table');
      const tbody = document.createElement('tbody');

      data.forEach(item => {
        if (item.section === section) {
          const row = document.createElement('tr');
          const keyCell = document.createElement('td');
          const valueCell = document.createElement('td');

          keyCell.textContent = item.key;
          const link = document.createElement('a');
          link.href = item.value;
          link.target = '_blank';
          link.textContent = item.value;
          valueCell.appendChild(link);

          row.appendChild(keyCell);
          row.appendChild(valueCell);

          tbody.appendChild(row);
        }
      });

      table.appendChild(tbody);
      sectionContainer.appendChild(table);
      sectionsContainer.appendChild(sectionContainer);
    }

    // Initial sections generation
    const uniqueSections = [...new Set(dataArray.map(item => item.section))];

    function generateSections() {
      sectionsContainer.innerHTML = '';

      uniqueSections.forEach(section => {
        const searchTerm = searchInput.value.toLowerCase();
        const sectionData = dataArray.filter(item =>
          item.section === section &&
          (item.key.toLowerCase().includes(searchTerm) || item.value.toLowerCase().includes(searchTerm))
        );

        if (sectionData.length > 0) {
          generateTableRowsForSection(sectionData, section);
        }
      });
    }

    // Initial sections generation on page load
    generateSections();

    // Search functionality
    searchInput.addEventListener('input', generateSections);
  </script>
</body>
</html>
