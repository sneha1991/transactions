# try2.ps1
# Path to the folder you want to monitor
$folderToMonitor = "C:\Users\sneha\Documents\PS\test"

# Function to check if the number is greater than 500
function IsNumberGreaterThan500($number) {
    $intValue = [int]$number
    return $intValue -gt 500
}

# Hashtable to store the last read line counts for each file
$lastProcessedFile = @{
    'Name' = $null
    'LineCount' = 0
    'Timestamp' = [DateTime]::MinValue
}

# Log file path
$logFilePath = "C:\Users\sneha\Documents\PS\File.log"  # Replace this with the actual path to your log file

# Function to process the file content and detect changes
function ProcessFiles {
    Write-Host "Processing files..."
    $latestFile = Get-ChildItem $folderToMonitor -Filter *.txt | Where-Object { $_.LastWriteTime -gt $lastProcessedFile['Timestamp'] } | Sort-Object LastWriteTime -Descending | Select-Object -First 1
   if ($latestFile) {
        $lastLineCount = $lastProcessedFile['LineCount']
        $currentLineCount = (Get-Content $latestFile.FullName | Measure-Object -Line).Lines

        if ($lastLineCount -lt $currentLineCount) {
            # Get only the new lines added since the last run
            $newLines = Get-Content $latestFile.FullName | Select-Object -Skip $lastLineCount

            foreach ($line in $newLines) {
                if ($line -match 'Avg Response Time \(ms\)\s+(\d+)') {
                    $number = $matches[1]

                    # Check if the number is greater than 500
                    if (IsNumberGreaterThan500 $number) {
                        Write-Host "File updated: $($latestFile.Name)"
                        Write-Host "Number greater than 500 detected: $number"
                        Write-Host "Log message:"
                        $logMessage = @"
File updated: $($latestFile.Name)
Number greater than 500 detected: $number
"@
                        Write-Host $logMessage
                        Add-Content -Path $logFilePath -Value $logMessage
                    }
                }
            }
        }

        # Update the last processed line count and timestamp for the latest file
        $lastProcessedFile['LineCount'] = $currentLineCount
        $lastProcessedFile['Timestamp'] = $latestFile.LastWriteTime
}	

          
}

# Main monitoring loop
while ($true) {
    ProcessFiles
    Write-Host "Monitoring... (Press Ctrl + C to stop)"
    Start-Sleep -Seconds 5
}
